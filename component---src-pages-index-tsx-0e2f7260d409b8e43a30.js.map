{"version":3,"file":"component---src-pages-index-tsx-0e2f7260d409b8e43a30.js","mappings":"wJAIA,MAAMA,GAAaC,EAAAA,EAAAA,GAAA,UAAAC,OAAA,aAAAD,CAAA,6EAIbE,EAAAA,EAAOC,UAAS,UAChBD,EAAAA,EAAOE,UAAS,cAChBF,EAAAA,EAAOG,UAAS,cAChBH,EAAAA,EAAOI,UAAS,sCAKhBC,GAAUP,EAAAA,EAAAA,GAAA,MAAAC,OAAA,aAAAD,CAAA,SACLE,EAAAA,EAAOM,MAAK,+CAEQN,EAAAA,EAAOC,UAAS,KAW/C,IARA,WACE,OACEM,EAAAA,EAAAA,IAACV,EAAa,MACZU,EAAAA,EAAAA,IAACF,EAAU,KAAC,gCAGlB,C,sGCNA,MAAMG,GAAMV,EAAAA,EAAAA,GAAA,UAAAC,OAAA,YAAAD,CAAA,CAAAW,KAAA,UAAAC,OAAA,8HAcNC,GAAQb,EAAAA,EAAAA,GAAA,OAAAC,OAAA,YAAAD,CAAA,CAAAW,KAAA,SAAAC,OAAA,mBAIRE,GAAad,EAAAA,EAAAA,IAAQe,IAAUN,EAAAA,EAAAA,IAACO,EAAAA,KAASD,IAAS,CAAAd,OAAA,YAArCD,CAAsC,SAC9CE,EAAAA,EAAOC,UAAS,KA2B3B,UAxBkBc,IAAc,IAAb,KAAEC,GAAMD,EACzB,MAAME,EAAQD,EAAKE,OAAOC,MAC1B,OACEZ,EAAAA,EAAAA,IAACa,EAAAA,EAAM,MACLb,EAAAA,EAAAA,IAACc,EAAAA,EAAM,OACPd,EAAAA,EAAAA,IAACI,EAAQ,MACPJ,EAAAA,EAAAA,IAAA,UAAI,QACHU,EAAMK,KAAKC,IAERhB,EAAAA,EAAAA,IAAA,WAASiB,IAAG,QAAUD,EAAKE,YAAYC,OACrCnB,EAAAA,EAAAA,IAACK,EAAU,CAACe,GAAE,UAAWC,EAAAA,EAAAA,GAAYL,EAAKE,YAAYC,QACpDnB,EAAAA,EAAAA,IAAA,UAAKgB,EAAKE,YAAYI,YAK9BtB,EAAAA,EAAAA,IAACK,EAAU,CAACe,GAAG,WACbpB,EAAAA,EAAAA,IAACC,EAAM,KAAC,UAGL,C,uBChEN,SAASoB,EAAYF,GAC1B,OAAOA,aAAI,EAAJA,EAAMI,MAAM,KAAKC,OAAO,GAAGC,KAAK,IACzC,C","sources":["webpack://new-gatsby-blog/./src/components/common/Header.tsx","webpack://new-gatsby-blog/./src/pages/index.tsx","webpack://new-gatsby-blog/./src/utils/index.ts"],"sourcesContent":["import styled from '@emotion/styled';\nimport React from 'react';\nimport colors from './colors';\n\nconst HeaderWrapper = styled.header`\n  text-align: center;\n  background: repeating-linear-gradient(\n    -20deg,\n    ${colors.keyColor1},\n    ${colors.keyColor2} 20%,\n    ${colors.keyColor3} 20%,\n    ${colors.keyColor4} 40%\n  );\n  padding: 1rem;\n  margin: 0 0;\n`;\nconst HeaderText = styled.h1`\n  color: ${colors.white};\n  font-weight: bold;\n  -webkit-text-stroke: 0.5px ${colors.keyColor1};\n`;\n\nfunction Header() {\n  return (\n    <HeaderWrapper>\n      <HeaderText>Welcome to MartianLee's Blog</HeaderText>\n    </HeaderWrapper>\n  );\n}\n\nexport default Header;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { graphql, Link } from 'gatsby';\nimport colors from '../components/common/colors';\nimport Header from '../components/common/Header';\nimport Layout from '../components/common/Layout';\nimport { slugToTitle } from '../utils';\n\ntype Post = {\n  frontmatter: {\n    title: string;\n    slug: string;\n    author: string;\n    categories: string;\n    crawlertitle: string;\n    date: Date;\n    layout: string;\n    summary: string;\n    tags: [];\n  };\n};\n\nconst Button = styled.button`\n  padding: 0.5rem 1rem;\n  background-color: #222222;\n  color: white;\n  font-weight: bold;\n  font-size: 1rem;\n  border-radius: 4px;\n  cursor: pointer;\n`;\n\nconst Warning = styled.div`\n  text-align: center;\n  font-size: 2rem;\n`;\nconst Contents = styled.div`\n  padding: 0 1rem;\n`;\n\nconst StyledLink = styled((props) => <Link {...props} />)`\n  color: ${colors.keyColor1};\n`;\n\nconst IndexPage = ({ data }) => {\n  const posts = data.allMdx.nodes;\n  return (\n    <Layout>\n      <Header />\n      <Contents>\n        <h2>최근 글</h2>\n        {posts.map((post: Post) => {\n          return (\n            <article key={`post-${post.frontmatter.slug}`}>\n              <StyledLink to={`posts/${slugToTitle(post.frontmatter.slug)}`}>\n                <h3>{post.frontmatter.title}</h3>\n              </StyledLink>\n            </article>\n          );\n        })}\n        <StyledLink to=\"/posts\">\n          <Button>더 보기</Button>\n        </StyledLink>\n      </Contents>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n\nexport const query = graphql`\n  query Posts {\n    allMdx(sort: { frontmatter: { date: DESC } }, limit: 5) {\n      nodes {\n        frontmatter {\n          slug\n          title\n          author\n          categories\n          crawlertitle\n          date\n          layout\n          summary\n          tags\n        }\n      }\n    }\n  }\n`;\n","export function slugToTitle(slug: string) {\n  return slug?.split('-').splice(3).join('-');\n}\n"],"names":["HeaderWrapper","_styled","target","colors","keyColor1","keyColor2","keyColor3","keyColor4","HeaderText","white","___EmotionJSX","Button","name","styles","Contents","StyledLink","props","Link","_ref","data","posts","allMdx","nodes","Layout","Header","map","post","key","frontmatter","slug","to","slugToTitle","title","split","splice","join"],"sourceRoot":""}