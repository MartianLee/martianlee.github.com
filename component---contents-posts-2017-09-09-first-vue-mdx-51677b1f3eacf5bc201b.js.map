{"version":3,"file":"component---contents-posts-2017-09-09-first-vue-mdx-51677b1f3eacf5bc201b.js","mappings":"uJAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,IAAK,MACLC,KAAM,SACLC,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,sGAAuG,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,sFAAuF,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,kOAAmO,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,8BAA+B,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,4KAA6K,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,iDAAkD,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,iEAAkE,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,gBAAiB,KAAMK,EAAAA,cAAoBR,EAAYI,IAAK,KAAMI,EAAAA,cAAoBR,EAAYK,KAAM,CAC1uCI,UAAW,iBACV,gGAAiG,KAAMD,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,sGACrJ,CAKA,UAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOW,QAASC,GAAaV,OAAOC,OAAO,CAAC,GAAGI,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWZ,EAAOS,EAAAA,cAAoBV,EAAmBC,IAAUD,EAAkBC,EAC9H,C,8FCiBO,MAAMa,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBN,GAC/B,MAAMO,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfL,EACFA,EAAWO,GAGb,IAAIA,KAAsBP,IAChC,CAACO,EAAmBP,GACzB,CAGA,MAAMQ,EAAc,CAAC,EAQd,SAASC,GAAY,WAACT,EAAU,SAAEU,EAAQ,qBAAEC,IAEjD,IAAIC,EAWJ,OAREA,EADED,EAEsB,mBAAfX,EACHA,EAAW,CAAC,GACZA,GAAcQ,EAEJF,EAAiBN,GAG5B,gBACLK,EAAWQ,SACX,CAACC,MAAOF,GACRF,EAEJ,C","sources":["webpack://new-gatsby-blog/./contents/posts/2017-09-09-first-vue.mdx","webpack://new-gatsby-blog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"요즘 인기가 많은 프론트엔드 프레임워크 'VueJS'를 시작하는 방법을 정리해 보려고 한다. 이어서 현재 개발하고 있는 프레임워크에 어떻게 적용하고 있는지 정리해 보려고 한다.\"), \"\\n\", React.createElement(_components.p, null, \"나의 배경지식에 대해서 요약하자면 C언어로 문제를 푸는 것으로 컴퓨터 공부를 시작했고 시커먼 화면이 싫어서 프론트엔드 개발을 시작하기로 마음먹었다.\"), \"\\n\", React.createElement(_components.p, null, \"HTML/CSS/Javascript는 기본 책을 2권씩 정도 읽었고 그 뒤로 개인 블로그를 만들 정도로 공부했다. 그 뒤로는 리엑트를 잠시 공부하려고 하다가 ES6, redux를 조금 공부하다가 때려치우고(...) 현재 스타트업에서 VueJS를 처음 공부하고 개발한지 4달정도 되었다. 이 글은 기본적인 HTML/CSS/Javascript를 이해하고 커맨드 라인과는 그리 친하지 않은 분께 알맞다.\"), \"\\n\", React.createElement(_components.p, null, \"VueJS를 처음 본 느낌은 '이쁘다!' 였다.\"), \"\\n\", React.createElement(_components.p, null, \"리엑트와는 다르게 공식 홈페이지가 굉장히 이쁘고 잘 정리되어 있었다. 처음 공부할 때 딱히 책을 사거나 그러진 않았고 (사실 책도 나온 게 몇권 없기도 했다) 우선 예제를 따라하는 것부터 시작했다. 재미있었던 것은 공식 홈페이지에 아예 뷰와 리엑트, 앵귤러와의 비교해서 좋은 점을 설명해준다는 것이다.\"), \"\\n\", React.createElement(_components.p, null, \"모두가 알다시피 새로운 걸 배우는 것의 거의 80%는 개발환경을 설치하는 일이다.\"), \"\\n\", React.createElement(_components.p, null, \"설치하는 방법은 https://nodejs.org/ko/download/package-manager/에 있다.\"), \"\\n\", React.createElement(_components.p, null, \"내 도커파일은 이랬다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"RUN curl -sL https://deb.nodesource.com/setup_7.x | bash -\\nRUN apt-get install -y nodejs\\n\")), \"\\n\", React.createElement(_components.p, null, \"쓰고자 하는 노드 버젼을 잘 마음을 먹자. 대충 6,7,8 있다구 생각하고 눈을 딱 감고 고르자. 물론 높을수록 최신버전이다 처음 개발을 할 때는 대단한 차이는 없을 것 같다.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","pre","code","_provideComponents","components","React","className","wrapper","MDXLayout","MDXContext","useMDXComponents","contextComponents","emptyObject","MDXProvider","children","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}