{"version":3,"file":"component---contents-posts-2021-06-14-jekyll-erro-mdx-a779c547d4f53a084cef.js","mappings":"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","sources":["webpack://new-gatsby-blog/./contents/posts/2021-06-14-jekyll-erro.mdx","webpack://new-gatsby-blog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    h3: \"h3\",\n    h4: \"h4\",\n    ol: \"ol\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"목차\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"목표\"), \"\\n\", React.createElement(_components.p, null, \"오랜만에 블로그를 정비하려고 local에 최신 ruby 3.0.1을 설치하고 bundle install을 하였는데, 오류가 잔뜩 났습니다. 최신 환경에서 jekyll을 설치하시는 다른 분께 도움이 될까 해서 내가 겪었던 에러들을 정리하였습니다.\"), \"\\n\", React.createElement(_components.h2, null, \"방법\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"이 글은 이미 지킬 프로젝트 문서를 어느정도 이해하거나 이미 설치를 완료한 유저를 대상으로 쓰여졌습니다.\\n\")), \"\\n\", React.createElement(_components.h3, null, \"사용한 도구\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"rvm\"), \"\\n\", React.createElement(_components.li, null, \"ruby 3.0.1\"), \"\\n\", React.createElement(_components.li, null, \"zsh\"), \"\\n\", React.createElement(_components.li, null, \"bundle\"), \"\\n\", React.createElement(_components.li, null, \"jekyll\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"에러 1\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"In file included from binder.cpp:20:\\n./project.h:119:10: fatal error: 'openssl/ssl.h' file not found\\n#include <openssl/ssl.h>\\n        ^~~~~~~~~~~~~~~\\n1 error generated.\\nmake: *** [binder.o] Error 1\\n\\nmake failed, exit code 2\\n\\nGem files will remain installed in /Users/kahlo/.rvm/gems/ruby-3.0.1/gems/eventmachine-1.2.7 for inspection.\\nResults logged to /Users/kahlo/.rvm/gems/ruby-3.0.1/extensions/x86_64-darwin-20/3.0.0/eventmachine-1.2.7/gem_make.out\\n\\nAn error occurred while installing eventmachine (1.2.7), and Bundler cannot continue.\\nMake sure that `gem install eventmachine -v '1.2.7' --source 'https://rubygems.org/'` succeeds before bundling.\\n\")), \"\\n\", React.createElement(_components.h4, null, \"해결\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"brew reinstall openssl\")), \"\\n\", React.createElement(_components.p, null, \"처음에 구글링한 결과에서는 openssl이 잘못 설치되어 있어서 그럴 수 있다고 했습니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"path 설정 \", React.createElement(_components.a, {\n    href: \"https://velog.io/@dev_hikun/github-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EC%84%A4%EC%B9%98%EC%A4%91-%EB%B0%9C%EC%83%9D%ED%95%9C-%EC%97%90%EB%9F%AC-%ED%95%B4%EA%B2%B0\"\n  }, \"방법 링크\")), \"\\n\", React.createElement(_components.p, null, \"openssl의 PATH를 설정해 주면 된다고 합니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"gem install eventmachine -- --with-openssl-dir=/usr/local/opt/openssl@1.1\")), \"\\n\", React.createElement(_components.p, null, \"저는 마지막 방법으로 해결하였습니다. 위의 명령어처럼 eventmachine gem을 설치하면서 openssl의 경로를 잡아주면 eventmachine을 찰떡같이 설치할 수 있습니다. 이후에는 \", React.createElement(_components.code, null, \"bundle install\"), \" 혹은 \", React.createElement(_components.code, null, \"bundle update\"), \" 하시면 됩니다.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"에러 2\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"~/.rvm/gems/ruby-3.0.1/gems/jekyll-4.2.0/lib/jekyll/commands/serve/servlet.rb:3:in `require': cannot load such file -- webrick (LoadError)\\n\")), \"\\n\", React.createElement(_components.p, null, \"설치가 다 되었다고 생각하고 \", React.createElement(_components.code, null, \"bundle exec jekyll serve\"), \"을 실행한 순간! webrick이 없다는 에러가 발생하였습니다.\"), \"\\n\", React.createElement(_components.h4, null, \"해결\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"bundle add webrick\\n\")), \"\\n\", React.createElement(_components.p, null, \"따로 webrick을 설치해주어야 하는 이유는 ruby 3.0.0부터 webrick이 기본으로 포함된 gem에서 빠졌기 때문이라고 합니다.\"), \"\\n\", React.createElement(_components.h2, null, \"결과\"), \"\\n\", React.createElement(_components.h3, null, \"설치 완료\"), \"\\n\", React.createElement(_components.p, null, \"무사히 설치를 완료하고 \", React.createElement(_components.code, null, \"bundle exec jekyll serve\"), \" 명령어로 Local에 지킬 블로그를 실행하였습니다. 오랜만에 블로깅 하니 식은땀 좀 흘리게 하려는 목적인가 싶네요. 하하.\"), \"\\n\", React.createElement(_components.h3, null, \"참고한 글\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/eventmachine/eventmachine/issues/932\"\n  }, \"eventmachine github issue\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://junho85.pe.kr/1850\"\n  }, \"jekyll 실행 시킬 때 `require': cannot load such file -- webrick (LoadError) 오류가 난다면\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","ul","li","h2","p","pre","code","h3","h4","ol","a","_provideComponents","components","React","className","href","wrapper","MDXLayout","MDXContext","useMDXComponents","contextComponents","emptyObject","MDXProvider","children","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}