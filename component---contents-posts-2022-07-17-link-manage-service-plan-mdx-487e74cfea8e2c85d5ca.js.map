{"version":3,"file":"component---contents-posts-2022-07-17-link-manage-service-plan-mdx-487e74cfea8e2c85d5ca.js","mappings":"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","sources":["webpack://new-gatsby-blog/./contents/posts/2022-07-17-link-manage-service-plan.mdx","webpack://new-gatsby-blog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"배경\"), \"\\n\", React.createElement(_components.p, null, \"평소에 웹서핑 중 읽을만한 유용한 링크를 발견하는데 카톡 혹은 슬랙에 던져놓고 흘러가는 경우가 많았다. 노션에 정리하는 것도 노션에는 사용하는 다른 페이지들이 많은데 그 페이지에 찾아가서 특정 형식에 맞추어 넣는 것이 모바일에서 그렇게 유연하지 않았다. 그런데 최근에 읽은 다른 분들의 사고방식은, 이런 요구사항을 간단한 서비스로 만들어서 조금씩 발전시키는 방식으로 사고하는 것을 발견하고 나도 한 번 따라해 보기로 했다.\"), \"\\n\", React.createElement(_components.h2, null, \"서비스 기획\"), \"\\n\", React.createElement(_components.p, null, \"가칭 : 초록링크 - 초링\"), \"\\n\", React.createElement(_components.p, null, \"초링에 읽고 싶은 링크를 던져 넣으세요. 초링이 원하는 시간에 읽을 수 있게 정리해 드립니다.\"), \"\\n\", React.createElement(_components.h3, null, \"서비스 사용 시나리오\"), \"\\n\", React.createElement(_components.p, null, \"step 1. 웹서핑 중 발견한 링크를 초링에 입력합니다.\"), \"\\n\", React.createElement(_components.p, null, \"step 2. 초링은 매일 정해진 시간에 당신에게 알람을 보냅니다.\"), \"\\n\", React.createElement(_components.p, null, \"step 3. 당신은 링크 내용을 읽고 요약을 작성하거나 우선순위를 설정해 다음으로 미룹니다.\"), \"\\n\", React.createElement(_components.h3, null, \"링크 CRUD\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"링크 속성\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"url, 링크 별명, 태그, 읽음여부, 우선순위(enum 12345), 링크 요약(markdown format)\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"관련 기능\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"링크 입력시 별명 입력 안할 경우 자동으로 meta title 입력\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"구현\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"Cron\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"유저와 1:1 매칭\"), \"\\n\", React.createElement(_components.li, null, \"요일, 시간(초기에는 분 입력 x) 입력, 기본은 매일 오후 10시\"), \"\\n\", React.createElement(_components.li, null, \"구현\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"github action (ex. nextjs cron https://github.com/paulphys/nextjs-cron, \", React.createElement(_components.a, {\n    href: \"https://yceffort.kr/2020/07/cron-job-with-github-actions\"\n  }, \"범용적인 cron job in github action\"), \")\"), \"\\n\", React.createElement(_components.li, null, \"easy cron \", React.createElement(_components.a, {\n    href: \"https://www.easycron.com/\"\n  }, \"https://www.easycron.com/\")), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"Architecture\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Framework\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"React - NexstJS vs Svelte\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"Nextjs\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"css framework\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"tailwind vs emotion/styled vs ??\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"Deploy\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://dev.to/parmentierchristophe/how-to-deploy-static-next-js-to-aws-s3-1d4f\"\n  }, \"s3 호스팅\")), \"\\n\", React.createElement(_components.li, null, \"vercel 호스팅\"), \"\\n\", React.createElement(_components.li, null, \"github page\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","h3","ul","li","a","_provideComponents","components","React","href","wrapper","MDXLayout","MDXContext","useMDXComponents","contextComponents","emptyObject","MDXProvider","children","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}