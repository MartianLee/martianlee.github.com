{"version":3,"file":"component---contents-posts-2018-01-29-parti-union-mdx-6202b5fe331b9278447c.js","mappings":"uJAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,EAAG,MACFC,EAAAA,EAAAA,MAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,kCAAmCI,EAAAA,cAAoBP,EAAYI,EAAG,CAC9JI,KAAM,2BACL,SAAU,gCAAiCD,EAAAA,cAAoBP,EAAYI,EAAG,CAC/EI,KAAM,iEACL,MAAO,2MAA4M,KAAMD,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,+FAAgG,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,WAAYI,EAAAA,cAAoBP,EAAYI,EAAG,CACjcI,KAAM,iCACL,aAAc,UAAW,KAAMD,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,oFAAqFI,EAAAA,cAAoBP,EAAYI,EAAG,CACjMI,KAAM,0CACL,aAAc,kNACnB,CAKA,UAJA,SAAoBT,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOU,QAASC,GAAaT,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWX,EAAOQ,EAAAA,cAAoBT,EAAmBC,IAAUD,EAAkBC,EAC9H,C,8FCYO,MAAMY,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBN,GAC/B,MAAMO,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfL,EACFA,EAAWO,GAGb,IAAIA,KAAsBP,IAChC,CAACO,EAAmBP,GACzB,CAGA,MAAMQ,EAAc,CAAC,EAQd,SAASC,GAAY,WAACT,EAAU,SAAEU,EAAQ,qBAAEC,IAEjD,IAAIC,EAWJ,OAREA,EADED,EAEsB,mBAAfX,EACHA,EAAW,CAAC,GACZA,GAAcQ,EAEJF,EAAiBN,GAG5B,gBACLK,EAAWQ,SACX,CAACC,MAAOF,GACRF,EAEJ,C","sources":["webpack://new-gatsby-blog/./contents/posts/2018-01-29-parti-union.mdx","webpack://new-gatsby-blog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"오늘부터 빠띠에서 일하게 되었다 ! 꿈만 같은 일이다. \", React.createElement(_components.a, {\n    href: \"https://docs.parti.xyz/\"\n  }, \"빠띠 소개\"), \"는 여기서 확인할 수 있다. 처음 빠띠를 만난 것은 \", React.createElement(_components.a, {\n    href: \"http://h21.hani.co.kr/arti/society/society_general/41891.html\"\n  }, \"뉴스\"), \"를 통해서였다. 이 뉴스를 읽는 나도 정확히 같은 생각이었다. 그런데 그 당시는 내가 무엇을 할 수 있을지 내가 빠띠에 기여를 할 수 있을 지 확신이 서지 않았고 시간은 지났다. 그러다가 박근혜 사태가 터졌고 그 뒤로 나의 삶은 완전히 바뀌었다. 그 동안 미뤄왔던 것들이 모두 돌아서 국가권력이라는 끔찍한 모습으로 나를 공격하고 있다는 것을 발견한 거다 !\"), \"\\n\", React.createElement(_components.p, null, \"나는 무엇이라도 해야 겠다. 싶었고 지금까지 왔다. 그리구 그 동안 나도 좌충우돌을 거듭해서 이 기사를 처음 읽을 때보다는 훨씬 살아야 겠다는 의지가 많이 생겼다.\"), \"\\n\", React.createElement(_components.p, null, \"빠띠의 깃헙은 \", React.createElement(_components.a, {\n    href: \"https://github.com/parti-coop\"\n  }, \"parti-xyz\"), \" 이곳이다.\"), \"\\n\", React.createElement(_components.p, null, \"오늘은 리모트로 출근한 첫날이고 겨우 큅에 있는 튜토리얼 문서를 읽으면서 설치를 했다. 설치를 하는 일은 생각보다 오래 걸렸다. 3시나 되어서나 \", React.createElement(_components.a, {\n    href: \"https://github.com/parti-coop/govcraft\"\n  }, \"가브크래프트 깃헙\"), \"를 읽기 시작했고 저장소를 클론해서 가져오는 중에서 막혔다. 또륵. 그렇게 6시가 지났고 하루 일과가 끝이 났다. 무서운 점은 6시가 끝나도 버튼을 끄지 않는다는 사실이고 계속 설치를 하고 싶었다. 그 뒤로 밥을 먹구 조금 놀다가 설치를 다시 봐야지 하다가 왔다갔다 했는데, 계속 설치는 지지부진하고 이렇게 글을 쓰고 있다. 리모트 근무라니. 만만한 일이 아니다. ㅋㅋ\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","_provideComponents","components","React","href","wrapper","MDXLayout","MDXContext","useMDXComponents","contextComponents","emptyObject","MDXProvider","children","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}